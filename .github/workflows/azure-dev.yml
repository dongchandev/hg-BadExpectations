name: Deploy to Azure Container Apps

on:
  workflow_dispatch:
  push:
    branches:
      - backend

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ env.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ env.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ env.AZURE_LOCATION }}
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          ./gradlew build -x test

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/2.16.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build Docker image
        run: |
          docker build -t acrtd2paiyvckrz2.azurecr.io/dongbao/uiseong-come-on:latest .

      - name: Log in to Azure Container Registry
        run: |
          echo ${{ env.AZURE_CREDENTIALS }} | docker login acrtd2paiyvckrz2.azurecr.io --username ${{ env.AZURE_CLIENT_ID }} --password-stdin

      - name: Push Docker image to Azure Container Registry
        run: |
          docker push acrtd2paiyvckrz2.azurecr.io/dongbao/uiseong-come-on:latest

      - name: Install azd
        uses: Azure/setup-azd@v1.0.0

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID }}
        run: |
          azd auth login \
            --client-id "$AZURE_CLIENT_ID" \
            --federated-credential-provider "github" \
            --tenant-id "$AZURE_TENANT_ID"

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable
          Write-Host "::add-mask::$($info.clientSecret)"
          azd auth login \
            --client-id "$($info.clientId)" \
            --client-secret "$($info.clientSecret)" \
            --tenant-id "$($info.tenantId)"
        env:
          AZURE_CREDENTIALS: ${{ env.AZURE_CREDENTIALS }}

      - name: Provision Infrastructure
        run: azd provision --no-prompt
        env:
          AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ env.AZD_INITIAL_ENVIRONMENT_CONFIG }}

      - name: Deploy Application
        run: azd deploy --no-prompt
